<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <!-- *********************************  RESOURCES  ********************************* -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Theme.Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- ********************************** BRUSHES **********************************-->
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_001}"/>
    <SolidColorBrush x:Key="LightForegroundBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="ThemeForegroundBrush" Color="{StaticResource Color_023}"/>
    <SolidColorBrush x:Key="ForegroundDisabledBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="HyperlinkForegroundBrush" Color="{StaticResource Color_026}"/>
    <SolidColorBrush x:Key="GridBackgroundBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="GridBorderBrush" Color="{StaticResource Color_027}"/>

    <LinearGradientBrush x:Key="LightGradientBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_031}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_032}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_032}"/>
        <GradientStop Color="{StaticResource Color_031}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_028}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_027}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TooltipBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.9">
        <GradientStop Color="{StaticResource Color_030}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_005}"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TooltipBorderBrush" Color="{StaticResource Color_027}" Opacity="0.9"/>

    <SolidColorBrush x:Key="SeparatorBrush" Color="{StaticResource Color_027}"/>
    <SolidColorBrush x:Key="ReadOnlyBgBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_033}"/>
    <SolidColorBrush x:Key="ValidationErrorBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="ShadowBackgroundBrush" Color="{StaticResource Color_001}"/>

    <!--  Button Brushes -->
    <LinearGradientBrush x:Key="ButtonBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="{StaticResource Color_030}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_032}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource Color_027}"/>

    <LinearGradientBrush x:Key="ButtonHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_018}"/>
        <GradientStop Offset="0.23" Color="{StaticResource Color_017}"/>
        <GradientStop Offset="0.75" Color="{StaticResource Color_017}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_019}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonHoverHighlightBorderBrush" Color="{StaticResource Color_019}"/>

    <LinearGradientBrush x:Key="ButtonHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
        <GradientStop Color="{StaticResource Color_014}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Offset="1" Color="{StaticResource Color_017}"/>
        <GradientStop Color="{StaticResource Color_016}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{StaticResource Color_012}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonFocusedBorderBrush" Color="{StaticResource Color_013}"/>

    <!--  ToggleButton Brushes -->
    <LinearGradientBrush x:Key="ToggleButtonBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="{StaticResource Color_030}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_032}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToggleButtonBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="{StaticResource Color_029}"/>
        <GradientStop Color="{StaticResource Color_027}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToggleButtonHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_018}"/>
        <GradientStop Offset="0.23" Color="{StaticResource Color_017}"/>
        <GradientStop Offset="0.75" Color="{StaticResource Color_017}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_019}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ToggleButtonHoverHighlightBorderBrush" Color="{StaticResource Color_019}"/>

    <LinearGradientBrush x:Key="ToggleButtonHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
        <GradientStop Color="{StaticResource Color_014}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToggleButtonPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Offset="1" Color="{StaticResource Color_017}"/>
        <GradientStop Color="{StaticResource Color_016}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToggleButtonPressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{StaticResource Color_012}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ToggleButtonFocusedBorderBrush" Color="{StaticResource Color_013}"/>

    <!--  CheckBox Brushes -->
    <SolidColorBrush x:Key="CheckBoxBackgroundBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="CheckBoxBorderBrush" Color="{StaticResource Color_027}"/>
    <LinearGradientBrush x:Key="CheckBoxInnerBackgroundBrush"  EndPoint="0.639999985694885,0.879999995231628" StartPoint="0.620000004768372,0.150000005960464">
        <GradientStop Color="{StaticResource Color_004}" Offset="0.013"/>
        <GradientStop Color="{StaticResource Color_005}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="CheckBoxInnerBorderBrush" EndPoint=".5,1" StartPoint=".5,0">
        <GradientStop Color="{StaticResource Color_030}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_027}"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="CheckBoxHoverBorderBrush" Color="{StaticResource Color_012}"/>
    <SolidColorBrush x:Key="CheckBoxHoverBackgroundBrush" Color="{StaticResource Color_018}"/>
    <SolidColorBrush x:Key="CheckBoxPressedBorderBrush" Color="{StaticResource Color_012}"/>
    <SolidColorBrush x:Key="CheckBoxPressedBackgroundBrush" Color="{StaticResource Color_018}"/>
    <LinearGradientBrush x:Key="CheckBoxInnerHoverBackgroundBrush" EndPoint="0.64,0.88" StartPoint="0.62,0.15">
        <GradientStop Color="{StaticResource Color_018}" Offset="0.013"/>
        <GradientStop Color="{StaticResource Color_019}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CheckBoxInnerHoverBorderBrush" EndPoint=".5,1" StartPoint=".5,0">
        <GradientStop Color="{StaticResource Color_016}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_012}"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CheckBoxPressedInnerBackgroundBrush" EndPoint="0.64,0.88" StartPoint="0.62,0.15">
        <GradientStop Color="{StaticResource Color_018}" Offset="0.013"/>
        <GradientStop Color="{StaticResource Color_019}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CheckBoxPressedInnerBorderBrush" EndPoint=".5,1" StartPoint=".5,0">
        <GradientStop Color="{StaticResource Color_012}"/>
        <GradientStop Color="{StaticResource Color_016}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="CheckBoxCheckIconBackgroundBrush" Color="{StaticResource Color_025}"/>
    <SolidColorBrush x:Key="CheckBoxIndeterminateIconBackgroundBrush" Color="{StaticResource Color_025}"/>

    <SolidColorBrush x:Key="CheckBoxFocusedBorderBrush" Color="{StaticResource Color_013}"/>


    <!--  RadioButton Brushes -->
    <SolidColorBrush x:Key="RadioButtonBackgroundBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="RadioButtonBorderBrush" Color="{StaticResource Color_027}"/>
    <LinearGradientBrush x:Key="RadioButtonInnerBackgroundBrush"  EndPoint="0.639999985694885,0.879999995231628" StartPoint="0.620000004768372,0.150000005960464">
        <GradientStop Color="{StaticResource Color_004}" Offset="0.013"/>
        <GradientStop Color="{StaticResource Color_005}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="RadioButtonInnerBorderBrush" EndPoint=".5,1" StartPoint=".5,0">
        <GradientStop Color="{StaticResource Color_030}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_027}"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="RadioButtonHoverBorderBrush" Color="{StaticResource Color_012}"/>
    <SolidColorBrush x:Key="RadioButtonHoverBackgroundBrush" Color="{StaticResource Color_018}"/>
    <SolidColorBrush x:Key="RadioButtonPressedBorderBrush" Color="{StaticResource Color_012}"/>
    <SolidColorBrush x:Key="RadioButtonPressedBackgroundBrush" Color="{StaticResource Color_018}"/>
    <LinearGradientBrush x:Key="RadioButtonInnerHoverBackgroundBrush" EndPoint="0.64,0.88" StartPoint="0.62,0.15">
        <GradientStop Color="{StaticResource Color_018}" Offset="0.013"/>
        <GradientStop Color="{StaticResource Color_019}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="RadioButtonInnerHoverBorderBrush" EndPoint=".5,1" StartPoint=".5,0">
        <GradientStop Color="{StaticResource Color_016}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_012}"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="RadioButtonPressedInnerBackgroundBrush" EndPoint="0.64,0.88" StartPoint="0.62,0.15">
        <GradientStop Color="{StaticResource Color_018}" Offset="0.013"/>
        <GradientStop Color="{StaticResource Color_019}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="RadioButtonPressedInnerBorderBrush" EndPoint=".5,1" StartPoint=".5,0">
        <GradientStop Color="{StaticResource Color_012}"/>
        <GradientStop Color="{StaticResource Color_016}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="RadioButtonCheckIconBorderBrush" Color="{StaticResource Color_024}"/>
    <LinearGradientBrush x:Key="RadioButtonCheckIconBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_025}" Offset="0.008"/>
        <GradientStop Color="{StaticResource Color_024}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="RadioButtonIndeterminateIconBackgroundBrush" Color="{StaticResource Color_025}"/>

    <SolidColorBrush x:Key="RadioButtonFocusedBorderBrush" Color="{StaticResource Color_013}"/>

    <!--  Scrollbars / Scrollviewer Brushes -->
    <SolidColorBrush x:Key="ScrollViewerCornerBackgroundBrush" Color="{StaticResource Color_029}"/>
    <SolidColorBrush x:Key="ScrollViewerCornerBorderBrush" Color="{StaticResource Color_027}"/>
    <SolidColorBrush x:Key="ScrollBarTrackBorderBrush" Color="{StaticResource Color_027}" />

    <LinearGradientBrush x:Key="HScrollBarTrackBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_028}" />
        <GradientStop Offset="0.40" Color="{StaticResource Color_029}" />
        <GradientStop Offset="1" Color="{StaticResource Color_029}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VScrollBarTrackBackgroundBrush" StartPoint="0.062,0.096" EndPoint="0.98,0.096">
        <GradientStop Offset="0" Color="{StaticResource Color_028}" />
        <GradientStop Offset="0.40" Color="{StaticResource Color_029}" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ScrollBarButtonlBorderBrush" Color="{StaticResource Color_026}"/>
    <SolidColorBrush x:Key="ScrollBarButtonlHighlightBackgroundBrush" Color="{StaticResource Color_029}"/>

    <LinearGradientBrush x:Key="HScrollBarButtonlBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.15" Color="{StaticResource Color_029}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_027}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HScrollBarButtonlHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.15" Color="{StaticResource Color_029}"/>
        <GradientStop Offset="0.89" Color="{StaticResource Color_028}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HScrollBarButtonlPressedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.15" Color="{StaticResource Color_028}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_027}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VScrollBarButtonlBackgroundBrush" StartPoint="0.062,0.096" EndPoint="0.98,0.096">
        <GradientStop Offset="0.15" Color="{StaticResource Color_029}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_027}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VScrollBarButtonlHoverBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0.15" Color="{StaticResource Color_029}"/>
        <GradientStop Offset="0.89" Color="{StaticResource Color_028}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VScrollBarButtonlPressedBackgroundBrush" StartPoint="0.062,0.096" EndPoint="0.98,0.096">
        <GradientStop Color="{StaticResource Color_029}" />
        <GradientStop Color="{StaticResource Color_027}" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HScrollBarGlyphBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0" Color="{StaticResource Color_026}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_025}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VScrollBarGlyphBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{StaticResource Color_026}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_025}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ScrollBarThumbGlyphBackgroundBrush" Color="{StaticResource Color_025}"/>

    <!--  Scrollbars / Scrollviewer WPF ONLY Brushes -->
    <LinearGradientBrush x:Key="HThumbGlyphBackgroundBrush" StartPoint="0,0" EndPoint="2,0" SpreadMethod="Repeat" MappingMode="Absolute">
        <GradientStop Color="{StaticResource Color_025}" />
        <GradientStop Color="{StaticResource Color_025}" Offset="0.60" />
        <GradientStop Color="{StaticResource Color_037}" Offset="0.60" />
        <GradientStop Color="{StaticResource Color_037}" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VThumbGlyphBackgroundBrush" StartPoint="1,-1" SpreadMethod="Repeat" MappingMode="Absolute">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5" />
                <SkewTransform CenterY="0.5" CenterX="0.5" />
                <RotateTransform CenterY="0.5" CenterX="0.5" />
                <TranslateTransform X="0.001" Y="0.111" />
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="{StaticResource Color_025}" />
        <GradientStop Color="{StaticResource Color_025}" Offset="0.60" />
        <GradientStop Color="{StaticResource Color_037}" Offset="0.60" />
        <GradientStop Color="{StaticResource Color_037}" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HScrollBarDisabledBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource Color_029}" Offset="0.016" />
        <GradientStop Offset="1" Color="{StaticResource Color_030}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VScrollBarDisabledBackgroundBrush" StartPoint="0.062,0.096" EndPoint="0.98,0.096">
        <GradientStop Offset="0" Color="{StaticResource Color_029}" />
        <GradientStop Offset="1" Color="{StaticResource Color_030}" />
    </LinearGradientBrush>

    <!--  ComboBoxItem Brushes -->
    <LinearGradientBrush x:Key="ComboBoxItemHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
        <GradientStop Color="{StaticResource Color_014}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxItemHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_018}"/>
        <GradientStop Offset="0.23" Color="{StaticResource Color_017}"/>
        <GradientStop Offset="0.75" Color="{StaticResource Color_017}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_019}"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBoxItemHoverHighlightBorderBrush" Color="{StaticResource Color_019}"/>

    <LinearGradientBrush x:Key="ComboBoxItemPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Offset="1" Color="{StaticResource Color_017}"/>
        <GradientStop Color="{StaticResource Color_016}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxItemPressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{StaticResource Color_012}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxItemSelectedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Offset="1" Color="{StaticResource Color_015}"/>
        <GradientStop Color="{StaticResource Color_014}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxItemSelectedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{StaticResource Color_012}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ComboBoxItemFocusedBorderBrush" Color="{StaticResource Color_013}"/>

    <!--  ListBox Brushes -->
    <SolidColorBrush x:Key="ListBoxBackgroundBrush" Color="{StaticResource Color_032}"/>    
    <SolidColorBrush x:Key="ListBoxBorderBrush" Color="{StaticResource Color_027}"/>
    <SolidColorBrush x:Key="ListBoxItemBackgroundBrush"  Color="{StaticResource Color_033}"/>
    <SolidColorBrush x:Key="ListBoxItemBorderBrush"  Color="{StaticResource Color_033}"/>

    <LinearGradientBrush x:Key="ListBoxItemHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
        <GradientStop Color="{StaticResource Color_014}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ListBoxItemHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_018}"/>
        <GradientStop Offset="0.23" Color="{StaticResource Color_017}"/>
        <GradientStop Offset="0.75" Color="{StaticResource Color_017}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_019}"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ListBoxItemHoverHighlightBorderBrush" Color="{StaticResource Color_019}"/>

    <LinearGradientBrush x:Key="ListBoxItemPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Offset="1" Color="{StaticResource Color_017}"/>
        <GradientStop Color="{StaticResource Color_016}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ListBoxItemPressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{StaticResource Color_012}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ListBoxItemSelectedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Offset="1" Color="{StaticResource Color_015}"/>
        <GradientStop Color="{StaticResource Color_014}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ListBoxItemSelectedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{StaticResource Color_012}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ListBoxItemFocusedBorderBrush" Color="{StaticResource Color_013}"/>

    <!--  TextBox / Editors Brushes -->
    <SolidColorBrush x:Key="TextBoxBackgroundBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource Color_027}"/>
    <SolidColorBrush x:Key="TextBoxHoverBorderBrush" Color="{StaticResource Color_014}"/>
    <SolidColorBrush x:Key="TextBoxFocusedBrush" Color="{StaticResource Color_013}"/>
    <SolidColorBrush x:Key="TextBoxEditableBorderBrush" Color="{StaticResource Color_027}"/>
  <SolidColorBrush x:Key="TextBoxSelectionBackgroundBrush" Color="{StaticResource Color_013}" Opacity="0.4"/>
  <SolidColorBrush x:Key="TextBoxSelectionForegroundBrush" Color="{StaticResource Color_1021}" Opacity="0.8"/>
    <SolidColorBrush x:Key="TextBoxReadOnlyBackgroundBrush" Color="{StaticResource Color_032}"/>
    <SolidColorBrush x:Key="TextBoxReadOnlyBorderBrush" Color="{StaticResource Color_029}"/>
    <SolidColorBrush x:Key="TextBoxDisabledBorderBrush" Color="{StaticResource Color_030}"/>

    <!--  Glyph Brushes -->
    <SolidColorBrush x:Key="GlyphBackgroundBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="GlyphBorderBrush" Color="{StaticResource Color_025}"/>
    <SolidColorBrush x:Key="GlyphFocusedBackgroundBrush" Color="{StaticResource Color_024}"/>
    <LinearGradientBrush x:Key="ArrowBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Offset="1" Color="{StaticResource Color_026}" />
        <GradientStop Color="{StaticResource Color_025}" />
    </LinearGradientBrush>

    <!-- ******************************************************** SL-WPF INLINE-CONTROLS SHARED RESOURCES ***********************************************************
*********************************************************************************************************************************************************************    -->
  
  <!-- *********************************  ValidationToolTipTemplate  ********************************* -->
  <ControlTemplate x:Key="ValidationToolTipTemplate">
    <Grid x:Name="Root" Margin="5,0" RenderTransformOrigin="0,0" Opacity="0">
      <Grid.RenderTransform>
        <TranslateTransform x:Name="xform" X="-25" />
      </Grid.RenderTransform>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="OpenStates">
          <VisualStateGroup.Transitions>
            <VisualTransition GeneratedDuration="0" />
            <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
              <Storyboard>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
                  <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
                  <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </VisualTransition>
          </VisualStateGroup.Transitions>
          <VisualState x:Name="Closed">
            <Storyboard>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Open">
            <Storyboard>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="ValidationStates">
          <VisualState x:Name="Valid" />
          <VisualState x:Name="InvalidFocused" />
          <VisualState x:Name="InvalidUnfocused" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border Background="{StaticResource ShadowBackgroundBrush}" CornerRadius="5" Margin="4,4,-4,-4" Opacity="0.01" />
      <Border Background="{StaticResource ShadowBackgroundBrush}" CornerRadius="4" Margin="3,3,-3,-3" Opacity="0.04" />
      <Border Background="{StaticResource ShadowBackgroundBrush}" CornerRadius="3" Margin="2,2,-2,-2" Opacity="0.10" />
      <Border Background="{StaticResource ShadowBackgroundBrush}" CornerRadius="2" Margin="1,1,-1,-1" Opacity="0.15" />
      <Border Background="{StaticResource ValidationErrorBrush}">
        <TextBlock UseLayoutRounding="false" Foreground="{StaticResource LightForegroundBrush}" Margin="8,4,8,4" MaxWidth="250" TextWrapping="Wrap" Text="{Binding Path=(Validation.Errors)[0].ErrorContent}" />
      </Border>
    </Grid>
  </ControlTemplate>
    <!-- *********************************  Base Button Style  ********************************* -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- *********************************  Button Style  ********************************* -->
    <Style x:Key="ButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ButtonHighlight" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BaseShape" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="ButtonHighlight" Margin="1" RadiusX="2" RadiusY="2" Stroke="{StaticResource ButtonHoverHighlightBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" Opacity="0"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonFocusedBorderBrush}" StrokeThickness="1"  RadiusX="3" RadiusY="3" Opacity="0"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="false" RadiusX="3" RadiusY="3" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  CheckBox Style  ********************************* -->
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Background" Value="{StaticResource CheckBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hoverBoxMiddle" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressedBoxMiddle" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateIcon"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentFocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Rectangle x:Name="normal" Fill="{TemplateBinding Background}" Height="14" Margin="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Width="14"/>
                            <Rectangle x:Name="normalBoxMiddle" Opacity="0.9" Height="10" StrokeThickness="1" Width="10" Fill="{StaticResource CheckBoxInnerBackgroundBrush}" Stroke="{StaticResource CheckBoxInnerBorderBrush}"/>
                            <Rectangle x:Name="hover" Fill="{StaticResource CheckBoxHoverBackgroundBrush}" Height="14" Margin="1" StrokeThickness="{TemplateBinding BorderThickness}" Width="14" Stroke="{StaticResource CheckBoxHoverBorderBrush}" Opacity="0"/>
                            <Rectangle x:Name="hoverBoxMiddle" Height="10" StrokeThickness="1" Width="10" Opacity="0" Fill="{StaticResource CheckBoxInnerHoverBackgroundBrush}" Stroke="{StaticResource CheckBoxInnerHoverBorderBrush}"/>
                            <Rectangle x:Name="pressed" Fill="{StaticResource CheckBoxPressedBackgroundBrush}" Height="14" Margin="1" StrokeThickness="{TemplateBinding BorderThickness}" Width="14" Stroke="{StaticResource CheckBoxPressedBorderBrush}" Opacity="0"/>
                            <Rectangle x:Name="pressedBoxMiddle" Height="10" StrokeThickness="1" Width="10" Opacity="0" Fill="{StaticResource CheckBoxPressedInnerBackgroundBrush}" Stroke="{StaticResource CheckBoxPressedInnerBorderBrush}"/>
                            <Path x:Name="CheckIcon" Data="M103.10625,598.38019 C103.10625,598.38019 104.35281,597.37262 104.35281,597.37262 C104.35281,597.37262 106.69083,599.42383 106.69083,599.42383 C106.69083,599.42383 110.9969,593.85394 110.9969,593.85394 C110.9969,593.85394 112.8087,593.86188 112.8087,593.86188 C112.8087,593.86188 107.73771,601.85333 107.73771,601.85333 C107.73771,601.85333 106.1218,601.8479 106.1218,601.8479 C106.1218,601.8479 103.10625,598.38019 103.10625,598.38019 z" Fill="{StaticResource CheckBoxCheckIconBackgroundBrush}" FlowDirection="LeftToRight" Opacity="0" Stretch="Fill" UseLayoutRounding="False" Width="8" Height="8"/>
                            <Rectangle x:Name="IndeterminateIcon" Fill="{StaticResource CheckBoxIndeterminateIconBackgroundBrush}" Height="2" Opacity="0" Width="6"/>
                            <Rectangle x:Name="ContentFocusVisualElement" Height="14" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource CheckBoxFocusedBorderBrush}" StrokeThickness="1" Width="14"/>
                            <Border x:Name="ValidationErrorElement" Height="16" BorderBrush="{StaticResource ValidationErrorBrush}" BorderThickness="1" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>true</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <Grid Background="{StaticResource TransparentBrush}" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                                    <Path Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="{StaticResource ValidationErrorBrush}" Margin="0,3,0,0"/>
                                </Grid>
                            </Border>
                            <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" Height="14" Opacity="0" Width="14"/>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************** RadioButton Style **********************************-->
    <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource RadioButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource RadioButtonBorderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hoverBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hoverBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="check">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentFocusVisualElement" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Bd">
                            <Ellipse Width="13" Height="13" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                            <Ellipse Width="9" Height="9" Fill="{StaticResource RadioButtonInnerBackgroundBrush}" Stroke="{StaticResource RadioButtonInnerBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                        </Grid>
                        <Grid x:Name="hoverBd" Visibility="Collapsed">
                            <Ellipse Width="13" Height="13" Fill="{StaticResource RadioButtonHoverBackgroundBrush}" Stroke="{StaticResource RadioButtonHoverBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                            <Ellipse Width="9" Height="9" Fill="{StaticResource RadioButtonInnerHoverBackgroundBrush}" Stroke="{StaticResource RadioButtonInnerHoverBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                        </Grid>
                        <Grid x:Name="pressedBd" Visibility="Collapsed">
                            <Ellipse Width="13" Height="13" Fill="{StaticResource RadioButtonPressedBackgroundBrush}"  Stroke="{StaticResource RadioButtonPressedBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                            <Ellipse Width="9" Height="9" Fill="{StaticResource RadioButtonPressedInnerBackgroundBrush}" Stroke="{StaticResource RadioButtonPressedInnerBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                        </Grid>
                        <Grid x:Name="check" Visibility="Collapsed">
                            <Ellipse Width="9" Height="9" Stroke="{StaticResource RadioButtonCheckIconBorderBrush}" StrokeThickness="1" Fill="{StaticResource RadioButtonCheckIconBackgroundBrush}" />
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Ellipse x:Name="ContentFocusVisualElement" Height="13" Width="13" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource RadioButtonFocusedBorderBrush}" StrokeThickness="1"/>
                        <Ellipse x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" Height="13" Width="13" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************** ComboBoxItem Style **********************************-->
    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Padding" Value="5,3,5,3"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hoverBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualState x:Name="AfterLoaded"/>
                                <VisualState x:Name="BeforeLoaded"/>
                                <VisualState x:Name="BeforeUnloaded"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="hoverBorder" Background="{StaticResource ComboBoxItemHoverBackgroundBrush}" BorderBrush="{StaticResource ComboBoxItemHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" CornerRadius="2">
                            <Rectangle Stroke="{StaticResource ComboBoxItemHoverHighlightBorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1"/>
                        </Border>
                        <Border x:Name="SelectedBorder" Background="{StaticResource ComboBoxItemSelectedBackgroundBrush}" BorderBrush="{StaticResource ComboBoxItemSelectedBorderBrush}" CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" IsHitTestVisible="False"/>
                        <Rectangle x:Name="FocusVisualElement" Stroke="{StaticResource ComboBoxItemFocusedBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" RadiusX="2" RadiusY="2"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************** ComboBoxToggleButton Style **********************************-->
    <Style x:Key="ComboBoxToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ButtonHighlight" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checkedBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="14"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="Bd" Fill="{StaticResource TransparentBrush}" Grid.ColumnSpan="2" />
                        <Grid Grid.Column="1">
                            <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                            <Rectangle x:Name="ButtonHighlight" Margin="1" Stroke="{StaticResource ButtonHoverHighlightBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" Opacity="0"/>
                            <Border x:Name="checkedBd" BorderBrush="{StaticResource ButtonPressedBorderBrush}" BorderThickness="1" Background="{StaticResource ButtonPressedBackgroundBrush}" Visibility="Collapsed"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonFocusedBorderBrush}" StrokeThickness="1" Opacity="0"/>
                            <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="false" Opacity="0"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ListBoxItem Style  ********************************* -->
    <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="{StaticResource ListBoxItemBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBoxItemBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemHoverBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BaseShape" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Rectangle x:Name="Highlight" Stroke="{StaticResource ListBoxItemHoverHighlightBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                        </Border>
                        <Rectangle x:Name="SelectedBorder" Fill="{StaticResource ListBoxItemSelectedBackgroundBrush}" Stroke="{StaticResource ListBoxItemSelectedBorderBrush}" Visibility="Collapsed"/>
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        <Rectangle x:Name="FocusedVisualElement" IsHitTestVisible="False" Visibility="Collapsed" Stroke="{StaticResource ListBoxItemFocusedBorderBrush}" StrokeThickness="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>