<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:System="clr-namespace:System;assembly=mscorlib" mc:Ignorable="d">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Theme.Colors.xaml" />
    <ResourceDictionary Source="Styles.Shared.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- ******************************************************** WPF SPECIFIC INLINE-CONTROLS RESOURCES ***********************************************************
    ***********************************************************************************************************************************************************************    -->
  <!-- *********************************  ScrollBarButton Style  ********************************* -->
  <Style x:Key="ScrollBarButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Focusable" Value="false" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid x:Name="grid1">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="Transparent" />
            <Path x:Name="normal" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Stroke="{StaticResource ArrowDarkBorderBrush}" Fill="{StaticResource ArrowBackgroundBrush}" />
            <Path x:Name="hover" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Fill="{StaticResource ButtonFocusedBorderBrush}" Opacity="0" Stroke="{StaticResource ArrowHoverBorderBrush}" />
            <Path x:Name="pressed" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Fill="{StaticResource ButtonHoverBorderBrush}" Opacity="0" Stroke="{StaticResource ArrowHoverBorderBrush}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ScrollBarPageButton Style  ********************************* -->
  <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Focusable" Value="false" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Horizontal ScrollBarThumb Style  ********************************* -->
  <Style x:Key="HScrollBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid Margin="0">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="normal" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource HScrollbarThumbBackgroundBrush}" Stroke="{StaticResource ArrowDarkBorderBrush}" />
            <Rectangle x:Name="hover" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource HScrollbarThumbHoverBackgroundBrush}" Opacity="0" Stroke="{StaticResource ArrowHoverBorderBrush}" />
            <Rectangle x:Name="pressed" Fill="{StaticResource HScrollbarThumbPressedBackgroundBrush}" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" Stroke="{StaticResource ArrowHoverBorderBrush}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Vertical ScrollbarThumb Style  ********************************* -->
  <Style x:Key="VScrollBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid x:Name="grid" Height="Auto" Width="Auto">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.4" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="normal" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Stroke="{StaticResource ArrowDarkBorderBrush}" Fill="{StaticResource HScrollbarThumbBackgroundBrush}">

            </Rectangle>
            <Rectangle x:Name="hover" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource VScrollbarThumbHoverBackgroundBrush}" Opacity="0" Stroke="{StaticResource ArrowHoverBorderBrush}" />
            <Rectangle x:Name="pressed" Fill="{StaticResource VScrollbarThumbPressedBackgroundBrush}" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" Stroke="{StaticResource ArrowHoverBorderBrush}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ScrollBar Style  ********************************* -->
  <Style x:Key="ScrollbarStyle" TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
    <Setter Property="Width" Value="20" />
    <Setter Property="MinWidth" Value="20" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid x:Name="Bg" SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
              <RowDefinition Height="0.00001*" />
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.3" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton1">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="thumb">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Grid.RowSpan="3" StrokeThickness="1" Fill="{StaticResource VScrollbarBackgroundBrush}" Stroke="{StaticResource ScrollbarBorderBrush}" Margin="0" />
            <RepeatButton x:Name="repeatButton" Margin="1" Command="{x:Static ScrollBar.LineUpCommand}" Style="{StaticResource ScrollBarButtonStyle}" />
            <Track x:Name="PART_Track" IsDirectionReversed="true" Grid.Row="1">
              <Track.DecreaseRepeatButton>
                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <Thumb x:Name="thumb" Style="{StaticResource VScrollBarThumbStyle}" Margin="5,0" />
              </Track.Thumb>
            </Track>
            <RepeatButton x:Name="repeatButton1" Command="{x:Static ScrollBar.LineDownCommand}" Grid.Row="2" Style="{StaticResource ScrollBarButtonStyle}" Margin="1" RenderTransformOrigin="0.5,0.5">
              <RepeatButton.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform Angle="180" />
                  <TranslateTransform />
                </TransformGroup>
              </RepeatButton.RenderTransform>
              <Path x:Name="smallIncreaseGlyph" Width="9" Height="5" Data="M 4,5 C4,5 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 0,1 0,0 0,0 0,0 9,0 9,0 9,0 9,1 9,1 9,1 8,1 8,1 8,1 8,2 8,2 8,2 7,2 7,2 7,2 7,3 7,3 7,3 6,3 6,3 6,3 6,4 6,4 6,4 5,4 5,4 5,4 5,5 5,5 5,5 4,5 4,5 z" IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Lime">
              </Path>
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Background" TargetName="Bg" Value="{StaticResource DisabledBackgroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Height" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid x:Name="Bg" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                  <ColumnDefinition Width="0.00001*" />
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                      <VisualTransition GeneratedDuration="0:0:0.3" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                      <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton">
                          <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton1">
                          <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                      </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Rectangle Grid.ColumnSpan="5" StrokeThickness="1" Fill="{StaticResource HScrollbarBackgroundBrush}" Stroke="{StaticResource ScrollbarBorderBrush}" />
                <RepeatButton x:Name="repeatButton" Command="{x:Static ScrollBar.LineLeftCommand}" Style="{StaticResource ScrollBarButtonStyle}" Opacity="1" RenderTransformOrigin="0.5,0.5">
                  <RepeatButton.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform Angle="-90" />
                      <TranslateTransform />
                    </TransformGroup>
                  </RepeatButton.RenderTransform>
                  <Path x:Name="horizontalSmallDecreaseGlyph" Width="5" Height="9" Data="M 0,4 C0,4 1,4 1,4 1,4 1,3 1,3 1,3 2,3 2,3 2,3 2,2 2,2 2,2 3,2 3,2 3,2 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 5,0 5,0 5,0 5,9 5,9 5,9 4,9 4,9 4,9 4,8 4,8 4,8 3,8 3,8 3,8 3,7 3,7 3,7 2,7 2,7 2,7 2,6 2,6 2,6 1,6 1,6 1,6 1,5 1,5 1,5 0,5 0,5 0,5 0,4 0,4 z" IsHitTestVisible="False" HorizontalAlignment="Center" Margin="0" d:LayoutOverrides="Width" VerticalAlignment="Center" Fill="Magenta">
                  </Path>
                </RepeatButton>
                <Track x:Name="PART_Track" Grid.Column="1">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb Style="{StaticResource HScrollBarThumbStyle}" Margin="0,5" />
                  </Track.Thumb>
                </Track>
                <RepeatButton x:Name="repeatButton1" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Style="{StaticResource ScrollBarButtonStyle}" Opacity="1" RenderTransformOrigin="0.5,0.5">
                  <RepeatButton.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform Angle="90" />
                      <TranslateTransform />
                    </TransformGroup>
                  </RepeatButton.RenderTransform>
                  <Path x:Name="horizontalSmallIncreaseGlyph" Width="5" Height="9" Data="M 5,4 C5,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 0,0 0,9 0,9 0,9 1,9 1,9 1,9 1,8 1,8 1,8 2,8 2,8 2,8 2,7 2,7 2,7 3,7 3,7 3,7 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 z" IsHitTestVisible="False" HorizontalAlignment="Center" Margin="0" d:LayoutOverrides="Width" VerticalAlignment="Center" Fill="Cyan">
                  </Path>
                </RepeatButton>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter Property="Background" TargetName="Bg" Value="{StaticResource DisabledBackgroundBrush}" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- *********************************  ScrollViewer Style ********************************* -->
  <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="Grid">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{StaticResource ScrollviewerCornerBackgroundBrush}" Grid.Row="1" Opacity="0.5" />
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0" />
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource ScrollbarStyle}" />
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource ScrollbarStyle}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <!-- *********************************  ComboBoxEditableTextBox Style  ********************************* -->
  <Style x:Key="ComboBoxEditableTextBoxStyle" TargetType="{x:Type TextBox}">
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="AllowDrop" Value="true" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="Padding" Value="5,3" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer Style="{StaticResource ScrollViewerStyle}" x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_ContentHost">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ReadOnly" />
                <VisualState x:Name="MouseOver" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TextBoxValidationToolTipTemplate  ********************************* -->
  <ControlTemplate x:Key="TextBoxValidationToolTipTemplate">
    <Grid x:Name="Root" Margin="5,0" RenderTransformOrigin="0,0" Opacity="0">
      <Grid.RenderTransform>
        <TranslateTransform x:Name="xform" X="-25" />
      </Grid.RenderTransform>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="OpenStates">
          <VisualStateGroup.Transitions>
            <VisualTransition GeneratedDuration="0" />
            <VisualTransition To="Open" GeneratedDuration="0:0:0.2">
              <Storyboard>
                <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
                  <DoubleAnimation.EasingFunction>
                    <BackEase Amplitude=".3" EasingMode="EaseOut" />
                  </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
              </Storyboard>
            </VisualTransition>
          </VisualStateGroup.Transitions>
          <VisualState x:Name="Closed">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Open">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0" />
              <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border Margin="3,3,-3,-3" Background="{StaticResource ValidationToolTipBackgroundFill}" CornerRadius="4" />
      <Border Margin="2,2,-2,-2" Background="{StaticResource ValidationToolTipBackgroundFill}" CornerRadius="3" />
      <Border Margin="1,1,-1,-1" Background="{StaticResource ValidationToolTipBackgroundFill}" CornerRadius="2" />
      <Border Background="{StaticResource InvalidFocusedBrush}" CornerRadius="2" />
      <Border CornerRadius="2">
        <TextBlock UseLayoutRounding="false" Foreground="{StaticResource ThemeLightForegroundBrush}" Margin="8,4,8,4" MaxWidth="250" TextWrapping="Wrap" Text="{Binding (Validation.Errors).CurrentItem.ErrorContent}" />
      </Border>
    </Grid>
  </ControlTemplate>

  <!-- *********************************  ComboBoxEditable Template  ********************************* -->
  <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DropDownhover">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Unfocused" />
          <VisualState x:Name="Focused" />
          <VisualState x:Name="FocusedDropDown" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border x:Name="ContentPresenterBorder"  Background="{StaticResource ThemeLightForegroundBrush}" CornerRadius="3">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="22" />
          </Grid.ColumnDefinitions>
          <Rectangle x:Name="DropDownNormal" Fill="{TemplateBinding Background}" RadiusY="3" RadiusX="3" Stroke="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" StrokeThickness="{TemplateBinding BorderThickness}" />
          <Rectangle x:Name="DropDownhover" RadiusY="3" RadiusX="3" Stroke="{StaticResource ComboBoxHoverBorderBrush}" StrokeThickness="1" Margin="0" Opacity="0" Grid.ColumnSpan="2" />
          <Rectangle x:Name="DropDownBackground" Fill="{StaticResource ComboBoxInnerShadowBackgroundBrush}" Height="22" RadiusY="3" RadiusX="3" Grid.ColumnSpan="2" VerticalAlignment="Top" IsHitTestVisible="False"/>
          <ToggleButton x:Name="DropDownToggle" BorderThickness="{TemplateBinding BorderThickness}" Style="{StaticResource ComboToggleStyle}" Height="{TemplateBinding Height}" Grid.Column="1" HorizontalAlignment="Stretch" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch" />
          <Rectangle x:Name="DropDownDisabled" Fill="{StaticResource ToggleButtonDisabledBackgroundBrush}" RadiusX="3" RadiusY="3" IsHitTestVisible="false" d:LayoutOverrides="GridBox" Grid.Column="1" Opacity="0" />
         <TextBox x:Name="PART_EditableTextBox" Grid.Column="0" Margin="0,0,0,-1" HorizontalContentAlignment="Left" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxEditableTextBoxStyle}" />
          <TextBlock IsHitTestVisible="False" Text=" " Margin="5,2,5,0" Visibility="Collapsed" />
        </Grid>
      </Border>
      <Popup x:Name="PART_Popup" Margin="1" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.ColumnSpan="2">
        <Border x:Name="DropDownBorder" HorizontalAlignment="Stretch" BorderBrush="{StaticResource PopupBorderBrush}" Background="{StaticResource PopupBackgroundBrush}" BorderThickness="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
          <Border.Effect>
            <DropShadowEffect BlurRadius="15" Direction="270" ShadowDepth="1" Opacity="0.26" Color="{StaticResource Color_000}" />
          </Border.Effect>
          <ScrollViewer CanContentScroll="true" BorderThickness="0" Padding="1" Style="{StaticResource ScrollViewerStyle}" Margin="0">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained" />
          </ScrollViewer>
        </Border>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="HasItems" Value="false">
        <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!-- *********************************  ComboBox Style  ********************************* -->
  <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
    <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
    <Setter Property="Padding" Value="5,3,20,3" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DropDownhover">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DropDownDisabled">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPresenter">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused" />
                <VisualState x:Name="FocusedDropDown">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DropDownBorder">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EmptyState">
                <VisualState x:Name="Empty">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="itemText" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="itemText" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="ContentPresenterBorder">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="22" />
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="DropDownNormal" Fill="{TemplateBinding Background}" RadiusY="3" RadiusX="3" Stroke="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" StrokeThickness="{TemplateBinding BorderThickness}" />
                <Rectangle x:Name="DropDownhover" RadiusY="3" RadiusX="3" Stroke="{StaticResource ComboBoxHoverBorderBrush}" StrokeThickness="1" Margin="0" Opacity="0" Grid.ColumnSpan="2" />
                <Rectangle x:Name="DropDownBackground" Fill="{StaticResource ComboBoxInnerShadowBackgroundBrush}" Height="22" RadiusY="3" RadiusX="3" Grid.ColumnSpan="2" VerticalAlignment="Top" IsHitTestVisible="False" />
                <ToggleButton x:Name="DropDownToggle" BorderThickness="{TemplateBinding BorderThickness}" Style="{StaticResource ComboToggleStyle}" Height="{TemplateBinding Height}" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch" />
                <Rectangle x:Name="DropDownDisabled" Fill="{StaticResource ToggleButtonDisabledBackgroundBrush}" RadiusX="3" RadiusY="3" IsHitTestVisible="false" d:LayoutOverrides="GridBox" Grid.Column="1" Opacity="0" />
                <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                <TextBlock IsHitTestVisible="False" Text=" " Margin="5,2,5,0" Visibility="Collapsed" />
              </Grid>
            </Border>
            <Popup x:Name="PART_Popup" Margin="1" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.ColumnSpan="2">
              <Border x:Name="DropDownBorder" HorizontalAlignment="Stretch" BorderBrush="{StaticResource PopupBorderBrush}" Background="{StaticResource PopupBackgroundBrush}" BorderThickness="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                <Border.Effect>
                  <DropShadowEffect BlurRadius="15" Direction="270" ShadowDepth="1" Opacity="0.26" Color="{StaticResource Color_000}" />
                </Border.Effect>
                <ScrollViewer CanContentScroll="true" BorderThickness="0" Padding="1" Style="{StaticResource ScrollViewerStyle}" Margin="0">
                  <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained" />
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsEditable" Value="true">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- ********************************** TextBox Style **********************************-->
  <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="4,2" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="AllowDrop" Value="true" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="FlowDirection" Value="LeftToRight" />
    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxValidationToolTipTemplate}"/>
	<Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
    <Setter Property="SelectionOpacity" Value="0.4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
                    <Grid SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>True</System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{TemplateBinding Background}" CornerRadius="3" />
            <Border Background="{StaticResource TextBoxShadowBackgroundBrush}" Height="22" CornerRadius="3" VerticalAlignment="Top" IsHitTestVisible="False" />
            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
              <ScrollViewer x:Name="PART_ContentHost" />
            </Border>
            <Rectangle x:Name="innerShadow" Width="20" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="1,1,0,1" RadiusX="2" RadiusY="2" Fill="{StaticResource TextBoxInnerShadowBackgroundBrush}" />
                        <Border x:Name="ValidationErrorElement" CornerRadius="3" BorderBrush="{StaticResource InvalidUnfocusedBrush}" BorderThickness="1" Margin="0" Visibility="Collapsed" >
              <ToolTipService.ToolTip>
                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource TextBoxValidationToolTipTemplate}"/>
              </ToolTipService.ToolTip>
              <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationErrorElementBrush}" Margin="1,3,0,0" />
                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource ThemeLightForegroundBrush}" Margin="1,3,0,0" />
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="BorderBrush" Value="{StaticResource TextBoxnDisabledBorderBrush}" TargetName="Bd" />
              <Setter Property="Foreground" Value="{StaticResource TextBoxDisabledForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="BorderBrush" Value="{StaticResource TextBoxHoverBorderBrush}" TargetName="Bd" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="BorderBrush" Value="{StaticResource TextBoxFocusedBorderBrush}" TargetName="Bd" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" Value="{StaticResource ReadonlyBackgroundBrush}" />
              <Setter Property="BorderBrush" Value="{StaticResource ReadonlyBorderBrush}" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** ListBoxStyle **********************************-->
  <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
    <Setter Property="Background" Value="{StaticResource ThemeLightForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ListBoxBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
            <ScrollViewer Focusable="false" Style="{StaticResource ScrollViewerStyle}" Margin="-1">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" TargetName="Bd" Value="0.5" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>