<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

  <!-- *********************************  COLORS  ********************************* -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Theme.Colors.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- *********************************  BRUSHES  ********************************* -->
  <SolidColorBrush x:Key="ThemeForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="ThemeLightForegroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_021}" />
  <SolidColorBrush x:Key="DarkGrayBorderBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="DisabledBorderBrush" Color="{StaticResource Color_008}" />

  <!-- Scrollbar/ScrollViewer Brushes -->
  <LinearGradientBrush x:Key="VScrollbarThumbHoverBackgroundBrush" StartPoint="0.199,0.469" EndPoint="1.17,0.469">
    <GradientStop Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_016}" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="VScrollbarThumbPressedBackgroundBrush" StartPoint="0.199,0.469" EndPoint="1.17,0.469">
    <GradientStop Color="{StaticResource Color_014}" Offset="1" />
    <GradientStop Color="{StaticResource Color_016}" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="VScrollbarThumbBackgroundBrush" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="{StaticResource Color_004}" Offset="1" />
    <GradientStop Color="{StaticResource Color_005}" />
  </LinearGradientBrush>

  <RadialGradientBrush x:Key="VScrollbarBackgroundBrush" Center="0.071435546875,0.5039216175738735" GradientOrigin="0,0.5" RadiusX="0.5" RadiusY="1.1">
    <GradientStop Color="{StaticResource Color_008}" />
    <GradientStop Color="{StaticResource Color_009}" Offset="1" />
  </RadialGradientBrush>
  <RadialGradientBrush x:Key="HScrollbarBackgroundBrush" Center="0.495,0.128" GradientOrigin="0.495,0.128" RadiusX="1.134" RadiusY="0.65">
    <GradientStop Color="{StaticResource Color_008}" />
    <GradientStop Color="{StaticResource Color_009}" Offset="1" />
  </RadialGradientBrush>

  <LinearGradientBrush x:Key="HScrollbarThumbBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_004}" Offset="1" />
    <GradientStop Color="{StaticResource Color_005}" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="HScrollbarThumbHoverBackgroundBrush" StartPoint="0.684,-0.023" EndPoint="0.684,0.971">
    <GradientStop Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_016}" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="HScrollbarThumbPressedBackgroundBrush" StartPoint="0.684,1.2" EndPoint="0.684,0.03">
    <GradientStop Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_016}" Offset="1" />
  </LinearGradientBrush>

  <SolidColorBrush x:Key="ScrollbarBorderBrush" Color="{StaticResource Color_022}" />
  <SolidColorBrush x:Key="ScrollbarThumbDisabledBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="ArrowHoverBorderBrush" Color="{StaticResource Color_016}" />
  <SolidColorBrush x:Key="ArrowDisabledBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="ArrowDarkBorderBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="ArrowBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="ScrollviewerCornerBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="ScrollviewerBorderBrush" Color="{StaticResource Color_006}" />

  <!-- ComboBox Brushes -->
  <LinearGradientBrush x:Key="ComboBoxInnerShadowBackgroundBrush" StartPoint="0.505,0.469" EndPoint="0.505,-0.023">
    <GradientStop Color="{StaticResource Color_026}" Offset="0.377" />
    <GradientStop Color="{StaticResource Color_048}" Offset="1" />
  </LinearGradientBrush>

  <SolidColorBrush x:Key="ComboBoxBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="ComboBoxBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="ComboBoxHoverBorderBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="PopupBorderBrush" Color="{StaticResource Color_007}" />

  <LinearGradientBrush x:Key="PopupBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_009}" Offset="1" />
    <GradientStop Color="{StaticResource Color_011}" />
  </LinearGradientBrush>

  <!-- ComboBoxItem Brushes -->
  <LinearGradientBrush x:Key="ComboBoxItemHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_016}" Offset="1" />
  </LinearGradientBrush>

  <SolidColorBrush x:Key="ComboBoxItemHoverBorderBrush" Color="{StaticResource Color_016}" />
  <LinearGradientBrush x:Key="ComboBoxItemPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
    <GradientStop Color="{StaticResource Color_014}" Offset="1" />
    <GradientStop Color="{StaticResource Color_016}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ComboBoxItemPressedBorderBrush" Color="{StaticResource Color_016}" />
  <LinearGradientBrush x:Key="ComboBoxItemSelectedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_011}" />
    <GradientStop Offset="0.97" Color="{StaticResource Color_009}" />
    <GradientStop Offset="0.99" Color="{StaticResource Color_009}" />
  </LinearGradientBrush>

  <SolidColorBrush x:Key="ComboBoxItemFocusedBorderBrush" Color="{StaticResource Color_014}" />

  <!-- ToggleButton Brushes -->
  <LinearGradientBrush x:Key="ToggleButtonPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
    <GradientStop Color="{StaticResource Color_014}" Offset="1" />
    <GradientStop Color="{StaticResource Color_016}" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="ToggleButtonDisabledBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
    <GradientStop Color="{StaticResource Color_008}" />
    <GradientStop Color="{StaticResource Color_006}" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="ToggleButtonFocusedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
    <GradientStop Color="{StaticResource Color_004}" Offset="1" />
    <GradientStop Color="{StaticResource Color_002}" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="ToggleButtonBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_004}" />
    <GradientStop Color="{StaticResource Color_002}" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="ToggleButtonHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_016}" Offset="1" />
  </LinearGradientBrush>

  <SolidColorBrush x:Key="ToggleButtonBorderBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="ToggleButtonHoverBorderBrush" Color="{StaticResource Color_016}" />
  <SolidColorBrush x:Key="ToggleButtonDisabledBorderBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="ToggleButtonPressedBorderBrush" Color="{StaticResource Color_016}" />
  <SolidColorBrush x:Key="ToggleButtonFocusedBorderBrush" Color="{StaticResource Color_014}" />

  <!-- TextBox Brushes -->
  <RadialGradientBrush x:Key="TextBoxInnerShadowBackgroundBrush" RadiusX="0.916" RadiusY="1.667" Center="0.72,0.528" GradientOrigin="0.72,0.528">
    <GradientStop Color="{StaticResource Color_026}" Offset="0.679" />
    <GradientStop Color="{StaticResource Color_027}" Offset="0.913" />
  </RadialGradientBrush>

  <LinearGradientBrush x:Key="TextBoxShadowBackgroundBrush" StartPoint="0.505,0.469" EndPoint="0.505,-0.023">
    <GradientStop Color="{StaticResource Color_026}" Offset="0.377" />
    <GradientStop Color="{StaticResource Color_048}" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="TextBoxGradientBackgroundBrush" StartPoint="0.505,0.469" EndPoint="0.505,-0.023">
    <GradientStop Color="{StaticResource Color_011}" Offset="0.377" />
    <GradientStop Color="{StaticResource Color_009}" Offset="1" />
  </LinearGradientBrush>

  <SolidColorBrush x:Key="TextBoxBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="TextBoxHoverBorderBrush" Color="{StaticResource Color_015}" />
  <SolidColorBrush x:Key="TextBoxnDisabledBorderBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="TextBoxDisabledForegroundBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="TextBoxFocusedBorderBrush" Color="{StaticResource Color_015}" />
  <SolidColorBrush x:Key="ReadonlyBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="ReadonlyBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="TextBoxEditableBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="TextBoxFocusedBrush" Color="{StaticResource Color_015}" />
  <SolidColorBrush x:Key="TextBoxSelectionBackgroundBrush" Color="{StaticResource Color_015}" Opacity="0.4" />
  <SolidColorBrush x:Key="TextBoxSelectionForegroundBrush" Color="{StaticResource Color_018}" />

  <!-- Button Brushes -->
  <LinearGradientBrush x:Key="ButtonBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_004}" />
    <GradientStop Color="{StaticResource Color_002}" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="ButtonHoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_016}" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="ButtonPressedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_014}" Offset="1" />
    <GradientStop Color="{StaticResource Color_016}" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="ButtonFocusedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_003}" />
    <GradientStop Color="{StaticResource Color_001}" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="ButtonDisabledBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_008}" />
    <GradientStop Color="{StaticResource Color_006}" Offset="1" />
  </LinearGradientBrush>

  <SolidColorBrush x:Key="ButtonHoverBorderBrush" Color="{StaticResource Color_016}" />
  <SolidColorBrush x:Key="ButtonFocusedBorderBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="{StaticResource Color_016}" />
  <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="ButtonDisabledBorderBrush" Color="{StaticResource Color_007}" />

  <!-- CheckBox Brushes -->
  <RadialGradientBrush x:Key="CheckBoxInnerShadowBrush" RadiusX="0.916" RadiusY="2.028" Center="0.929,0.499" GradientOrigin="0.929,0.499">
    <GradientStop Color="{StaticResource Color_026}" Offset="0.679" />
    <GradientStop Color="{StaticResource Color_027}" Offset="0.997" />
  </RadialGradientBrush>

  <RadialGradientBrush x:Key="CheckBoxBackgroundBrush" RadiusX="0.916" RadiusY="0.667" Center="0.5,0.6" GradientOrigin="0.5,0.6">
    <GradientStop Color="{StaticResource Color_011}" Offset="0.645" />
    <GradientStop Color="{StaticResource Color_008}" Offset="1" />
  </RadialGradientBrush>

  <SolidColorBrush x:Key="CheckBoxBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="CheckBoxHoverBorderBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="CheckBoxFocusedBorderBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="CheckBoxGlyphBackgroundBrush" Color="{StaticResource Color_003}" />

  <!-- RadioButton Brushes -->
  <RadialGradientBrush x:Key="RadioButtonBackgroundBrush" RadiusX="0.916" RadiusY="0.667" Center="0.5,0.6" GradientOrigin="0.5,0.6">
    <GradientStop Color="{StaticResource Color_011}" Offset="0.645" />
    <GradientStop Color="{StaticResource Color_008}" Offset="1" />
  </RadialGradientBrush>

  <LinearGradientBrush x:Key="RadioButtonCheckBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_014}" />
    <GradientStop Offset="0.80" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_017}" />
  </LinearGradientBrush>

  <SolidColorBrush x:Key="RadioButtonHoverBorderBrush" Color="{StaticResource Color_013}" />
  <SolidColorBrush x:Key="RadioButtonPressedBorderBrush" Color="{StaticResource Color_015}" />
  <SolidColorBrush x:Key="RadioButtonDisabledBorderBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="RadioButtonBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="RadioButtonCheckBorderBrush" Color="{StaticResource Color_016}" />

  <!-- Validation Brushes -->
  <SolidColorBrush x:Key="InvalidUnfocusedBrush" Color="{StaticResource Color_019}" />
  <SolidColorBrush x:Key="InvalidFocusedBrush" Color="{StaticResource Color_020}" />
  <SolidColorBrush x:Key="ValidationToolTipBackgroundFill" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="ValidationErrorElementBrush" Color="{StaticResource Color_020}" />

  <!-- ListBox Brushes -->
  <SolidColorBrush x:Key="ListBoxBorderBrush" Color="{StaticResource Color_006}" />

  <SolidColorBrush x:Key="ListBoxItemBackgroundBrush" Color="{StaticResource Color_021}" />
  <SolidColorBrush x:Key="ListBoxItemBorderBrush" Color="{StaticResource Color_021}" />

  <LinearGradientBrush x:Key="ListBoxItemHoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_016}" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ListBoxItemHoverBorderBrush" Color="{StaticResource Color_016}" />

  <SolidColorBrush x:Key="ListBoxItemFocusedBorderBrush" Color="{StaticResource Color_014}" />
  <LinearGradientBrush x:Key="LIstBoxItemSelectedBackgroundBrush" StartPoint="0.7,-0.0390625" EndPoint="0.7,1">
    <GradientStop Color="{StaticResource Color_011}" Offset="0" />
    <GradientStop Color="{StaticResource Color_009}" Offset="1" />
  </LinearGradientBrush>

  <!-- ******************************************************** SL-WPF INLINE-CONTROLS SHARED RESOURCES ***********************************************************
*********************************************************************************************************************************************************************    -->

  <!-- *********************************  ValidationToolTipTemplate  ********************************* -->
  <ControlTemplate x:Key="ValidationToolTipTemplate">
    <Grid x:Name="Root" Margin="5,0" RenderTransformOrigin="0,0" Opacity="0">
      <Grid.RenderTransform>
        <TranslateTransform x:Name="xform" X="-25" />
      </Grid.RenderTransform>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="OpenStates">
          <VisualStateGroup.Transitions>
            <VisualTransition GeneratedDuration="0" />
            <VisualTransition To="Open" GeneratedDuration="0:0:0.2">
              <Storyboard>
                <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
                  <DoubleAnimation.EasingFunction>
                    <BackEase Amplitude=".3" EasingMode="EaseOut" />
                  </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
              </Storyboard>
            </VisualTransition>
          </VisualStateGroup.Transitions>
          <VisualState x:Name="Closed">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Open">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0" />
              <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border Margin="3,3,-3,-3" Background="{StaticResource ValidationToolTipBackgroundFill}" CornerRadius="4" />
      <Border Margin="2,2,-2,-2" Background="{StaticResource ValidationToolTipBackgroundFill}" CornerRadius="3" />
      <Border Margin="1,1,-1,-1" Background="{StaticResource ValidationToolTipBackgroundFill}" CornerRadius="2" />
      <Border Background="{StaticResource InvalidFocusedBrush}" CornerRadius="2" />
      <Border CornerRadius="2">
        <TextBlock UseLayoutRounding="false" Foreground="{StaticResource ThemeLightForegroundBrush}" Margin="8,4,8,4" MaxWidth="250" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" />
      </Border>
    </Grid>
  </ControlTemplate>
  <!-- *********************************  ButtonStyle  ********************************* -->
  <Style x:Key="ButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource ThemeLightForegroundBrush}" />
    <Setter Property="Padding" Value="8,0,8,2" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.2" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="normal" Opacity="1" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonBorderBrush}" Fill="{StaticResource ButtonBackgroundBrush}" />
            <Rectangle x:Name="hover" Opacity="0" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonHoverBorderBrush}" Fill="{StaticResource ButtonHoverBackgroundBrush}" />
            <Rectangle x:Name="pressed" Opacity="0" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonPressedBorderBrush}" Fill="{StaticResource ButtonPressedBackgroundBrush}" />
            <Rectangle x:Name="focused" Opacity="0" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonFocusedBorderBrush}" />
            <Rectangle x:Name="disabled" Opacity="0" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonDisabledBorderBrush}" Fill="{StaticResource ButtonDisabledBackgroundBrush}" />
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** CheckBoxStyle **********************************-->
  <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Padding" Value="4,1,0,0" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="18" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.2" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBox" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateIcon" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidUnfocused" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidFocused" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="normal" Opacity="1" Width="14" RadiusX="1" RadiusY="1" Stroke="{StaticResource CheckBoxBorderBrush}" StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top" Fill="{StaticResource CheckBoxBackgroundBrush}" />
            <Rectangle x:Name="hover" Width="14" RadiusX="1" RadiusY="1" Stroke="{StaticResource CheckBoxHoverBorderBrush}" StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top" Fill="{StaticResource CheckBoxBackgroundBrush}" Opacity="0" />
            <Rectangle x:Name="pressed" Opacity="0" Width="14" RadiusX="1" RadiusY="1" Stroke="{StaticResource CheckBoxFocusedBorderBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxBackgroundBrush}" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top" />
            <Rectangle x:Name="focused" Opacity="0" Width="14" RadiusX="1" RadiusY="1" Stroke="{StaticResource CheckBoxFocusedBorderBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxBackgroundBrush}" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top" />
            <Rectangle x:Name="disabled" Opacity="0" Width="14" RadiusX="1" RadiusY="1" Stroke="{StaticResource DisabledBorderBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxBackgroundBrush}" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top" />
            <Rectangle x:Name="invalidUnfocused" Opacity="0" Width="14" RadiusX="1" RadiusY="1" Stroke="{StaticResource InvalidUnfocusedBrush}" StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top" Fill="{StaticResource CheckBoxBackgroundBrush}" />
            <Rectangle x:Name="invalidFocused" Opacity="0" Width="14" RadiusX="1" RadiusY="1" Stroke="{StaticResource InvalidFocusedBrush}" StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top" Fill="{StaticResource CheckBoxBackgroundBrush}" />
            <Rectangle x:Name="innerShadow" Width="14" StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top" RadiusX="0.5" RadiusY="0.5" Fill="{StaticResource CheckBoxInnerShadowBrush}" />
            <Path x:Name="checkBox" Height="8" Width="10" Stretch="Fill" Opacity="0" Fill="{StaticResource CheckBoxGlyphBackgroundBrush}" HorizontalAlignment="Left" Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z" Margin="4,5,0,0" UseLayoutRounding="False" VerticalAlignment="Top" />
            <Rectangle x:Name="IndeterminateIcon" Fill="{StaticResource CheckBoxGlyphBackgroundBrush}" Height="2" Width="6" VerticalAlignment="Top" Margin="0,8,0,0" Opacity="0" />
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** RadioButton Style **********************************-->
  <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="4,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RadioButton">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="16" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hoverBd">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressedBd">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="RadioButtonBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RadioButtonDisabledBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="check">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="check">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="RadioButtonBackground" Width="13" Height="13" RadiusX="3" RadiusY="3" Fill="{StaticResource RadioButtonBackgroundBrush}" Stroke="{StaticResource RadioButtonBorderBrush}" StrokeThickness="1" Margin="2,2,0,0" />
            <Rectangle x:Name="hoverBd" Visibility="Collapsed" Width="13" Height="13" RadiusX="3" RadiusY="3" Fill="{StaticResource RadioButtonBackgroundBrush}" Stroke="{StaticResource RadioButtonHoverBorderBrush}" StrokeThickness="1" Margin="2,2,0,0" />
            <Rectangle x:Name="pressedBd" Visibility="Collapsed" Width="13" Height="13" RadiusX="3" RadiusY="3" Fill="{StaticResource RadioButtonBackgroundBrush}" Stroke="{StaticResource RadioButtonPressedBorderBrush}" StrokeThickness="1" Margin="2,2,0,0" />
            <Rectangle x:Name="check" Visibility="Collapsed" Width="9" Height="9" RadiusX="2" RadiusY="2" Stroke="{StaticResource RadioButtonCheckBorderBrush}" StrokeThickness="1" Fill="{StaticResource RadioButtonCheckBackgroundBrush}" Margin="2,2,0,0" />
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ComboBoxToggleButton Style   ********************************* -->
  <Style x:Key="ComboToggleStyle" TargetType="ToggleButton">
    <Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground" Value="{StaticResource ThemeLightForegroundBrush}" />
    <Setter Property="Padding" Value="5,0,5,0" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="arrowHover" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="arrowHover" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="arrowDisabled" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="22" />
            </Grid.ColumnDefinitions>
            <Rectangle Fill="Transparent" HorizontalAlignment="Stretch" />
            <Rectangle x:Name="normal" Fill="{StaticResource ToggleButtonBackgroundBrush}" Stroke="{StaticResource ToggleButtonBorderBrush}" RadiusX="3" Grid.Column="1" RadiusY="3" Width="{Binding Height, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <Rectangle x:Name="hover" Fill="{StaticResource ToggleButtonHoverBackgroundBrush}" Stroke="{StaticResource ToggleButtonHoverBorderBrush}" RadiusX="3" Grid.Column="1" RadiusY="3" Opacity="0" />
            <Rectangle x:Name="pressed" Fill="{StaticResource ToggleButtonPressedBackgroundBrush}" Stroke="{StaticResource ToggleButtonPressedBorderBrush}" RadiusX="3" Grid.Column="1" RadiusY="3" Opacity="0" />
            <Rectangle x:Name="disabled" Fill="{StaticResource ToggleButtonDisabledBackgroundBrush}" Stroke="{StaticResource ToggleButtonDisabledBorderBrush}" RadiusX="3" Grid.Column="1" RadiusY="3" Opacity="0" />
            <Rectangle x:Name="focused" Fill="{StaticResource ToggleButtonFocusedBackgroundBrush}" Stroke="{StaticResource ToggleButtonFocusedBorderBrush}" RadiusX="3" Grid.Column="1" RadiusY="3" Opacity="0" />
            <Path x:Name="BtnArrow" Stretch="Uniform" Height="4" Fill="White" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z" Grid.Column="1" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Center" />
            <Path HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="7" Width="10" Stretch="Fill" Opacity="1" Data="M 17,19 C17,19 12,26 12,26 12,26 7,19 7,19 7,19 17,19 17,19 z" Stroke="{StaticResource DarkGrayBorderBrush}" Fill="{TemplateBinding Foreground}" Grid.Column="1" StrokeThickness="{TemplateBinding BorderThickness}" />
            <Path x:Name="arrowHover" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="7" Width="10" Stretch="Fill" Opacity="0" Data="M 17,19 C17,19 12,26 12,26 12,26 7,19 7,19 7,19 17,19 17,19 z" Stroke="{StaticResource ArrowHoverBorderBrush}" Fill="{TemplateBinding Foreground}" Grid.Column="1" StrokeThickness="{TemplateBinding BorderThickness}" />
            <Path x:Name="arrowDisabled" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="7" Width="10" Stretch="Fill" Opacity="0" Data="M 17,19 C17,19 12,26 12,26 12,26 7,19 7,19 7,19 17,19 17,19 z" Stroke="{StaticResource ArrowDisabledBorderBrush}" Fill="{TemplateBinding Foreground}" Grid.Column="1" StrokeThickness="{TemplateBinding BorderThickness}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ComboBoxItem Style  ********************************* -->
  <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
    <Setter Property="Padding" Value="5,3,5,3" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Height" Value="22" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeLightForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected" />
                <VisualState x:Name="SelectedUnfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl1" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl1" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="LayoutStates">
                <VisualState x:Name="AfterLoaded" />
                <VisualState x:Name="BeforeLoaded" />
                <VisualState x:Name="BeforeUnloaded" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="fillColor" Fill="{StaticResource ComboBoxItemHoverBackgroundBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1" Stroke="{StaticResource ComboBoxItemHoverBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="FocusVisualElement" RadiusY="1" RadiusX="1" Stroke="{StaticResource ComboBoxItemFocusedBorderBrush}" Visibility="Collapsed" StrokeThickness="{TemplateBinding BorderThickness}" />
            <ContentControl x:Name="contentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}">
              <ContentPresenter x:Name="contentPresenter" />
            </ContentControl>
            <ContentControl x:Name="contentControl1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}">
              <ContentPresenter x:Name="contentPresenter1" />
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ListBoxItem Style  ********************************* -->
  <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="hover" />
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeLightForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="selected" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedContent">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="selected" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedContent">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="LayoutStates">
                <VisualState x:Name="AfterLoaded" />
                <VisualState x:Name="BeforeLoaded" />
                <VisualState x:Name="BeforeUnloaded" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="hover" Fill="{StaticResource ListBoxItemHoverBackgroundBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1" />
            <Rectangle x:Name="selected" Fill="{StaticResource LIstBoxItemSelectedBackgroundBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1" Stroke="{StaticResource ListBoxItemFocusedBorderBrush}" />
            <Rectangle x:Name="focused" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1" Stroke="{StaticResource ListBoxItemFocusedBorderBrush}" />
            <ContentControl x:Name="contentControl" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
              <ContentPresenter x:Name="contentPresenter" Margin="5,3,5,0" />
            </ContentControl>
            <ContentControl x:Name="SelectedContent" Visibility="Collapsed" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
              <ContentPresenter x:Name="contentPresenter2" Margin="5,3,5,0" />
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>