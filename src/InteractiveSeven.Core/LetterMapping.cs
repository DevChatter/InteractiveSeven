using System.Collections.Generic;
using System.Linq;

namespace InteractiveSeven.Core
{
    public static class LetterMapping
    {
        private static readonly Dictionary<char,byte> Map = new Dictionary<char, byte>
        {
            ['!'] = 1,
            ['"'] = 2,
            ['#'] = 3,
            ['$'] = 4,
            ['%'] = 5,
            ['&'] = 6,
            ['('] = 8,
            [')'] = 9,
            ['*'] = 10,
            ['+'] = 11,
            [','] = 12,
            ['-'] = 13,
            ['.'] = 14,
            ['/'] = 15,
            ['0'] = 16,
            ['1'] = 17,
            ['2'] = 18,
            ['3'] = 19,
            ['4'] = 20,
            ['5'] = 21,
            ['6'] = 22,
            ['7'] = 23,
            ['8'] = 24,
            ['9'] = 25,
            [':'] = 26,
            [';'] = 27,
            ['<'] = 28,
            ['='] = 29,
            ['>'] = 30,
            ['?'] = 31,
            ['@'] = 32,
            ['A'] = 33,
            ['B'] = 34,
            ['C'] = 35,
            ['D'] = 36,
            ['E'] = 37,
            ['F'] = 38,
            ['G'] = 39,
            ['H'] = 40,
            ['I'] = 41,
            ['J'] = 42,
            ['K'] = 43,
            ['L'] = 44,
            ['M'] = 45,
            ['N'] = 46,
            ['O'] = 47,
            ['P'] = 48,
            ['Q'] = 49,
            ['R'] = 50,
            ['S'] = 51,
            ['T'] = 52,
            ['U'] = 53,
            ['V'] = 54,
            ['W'] = 55,
            ['X'] = 56,
            ['Y'] = 57,
            ['Z'] = 58,
            ['['] = 59,
            [']'] = 61,
            ['^'] = 62,
            ['_'] = 63,
            ['`'] = 64,
            ['a'] = 65,
            ['b'] = 66,
            ['c'] = 67,
            ['d'] = 68,
            ['e'] = 69,
            ['f'] = 70,
            ['g'] = 71,
            ['h'] = 72,
            ['i'] = 73,
            ['j'] = 74,
            ['k'] = 75,
            ['l'] = 76,
            ['m'] = 77,
            ['n'] = 78,
            ['o'] = 79,
            ['p'] = 80,
            ['q'] = 81,
            ['r'] = 82,
            ['s'] = 83,
            ['t'] = 84,
            ['u'] = 85,
            ['v'] = 86,
            ['w'] = 87,
            ['x'] = 88,
            ['y'] = 89,
            ['z'] = 90,
            ['{'] = 91,
            ['|'] = 92,
            ['}'] = 93,
            ['~'] = 94,
            ['Ä'] = 96,
            ['Á'] = 97,
            ['Ç'] = 98,
            ['É'] = 99,
            ['Ñ'] = 100,
            ['Ö'] = 101,
            ['Ü'] = 102,
            ['à'] = 103,
            ['á'] = 104,
            ['â'] = 105,
            ['ä'] = 106,
            ['ã'] = 107,
            ['å'] = 108,
            ['ç'] = 109,
            ['è'] = 110,
            ['é'] = 111,
            ['ê'] = 112,
            ['ë'] = 113,
            ['ì'] = 114,
            ['í'] = 115,
            ['î'] = 116,
            ['ï'] = 117,
            ['ñ'] = 118,
            ['ò'] = 119,
            ['ó'] = 120,
            ['ô'] = 121,
            ['ö'] = 122,
            ['õ'] = 123,
            ['ù'] = 124,
            ['ú'] = 125,
            ['û'] = 126,
            ['ü'] = 127,
            ['¤'] = 128,
            ['º'] = 129,
            ['¢'] = 130,
            ['£'] = 131,
            ['ú'] = 132,
            ['ù'] = 133,
            ['¸'] = 135,
            ['¨'] = 140
        };

        public static byte[] MapStringToBytes(string text)
        {
            var bytes = new byte[9];
            for (int i = 0; i < 9; i++)
            {
                if (!Map.TryGetValue(text.ElementAtOrDefault(i), out bytes[i]))
                {
                    break;
                }
            }
            return text.Take(9).Select(c => Map[c]).ToArray();
        }
    }
}